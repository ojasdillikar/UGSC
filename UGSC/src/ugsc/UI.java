/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ugsc;
import java.awt.Color;
import java.awt.Font;
import java.awt.datatransfer.DataFlavor;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDropEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ojasd
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        slide = new javax.swing.JTabbedPane();
        main = new javax.swing.JPanel();
        st = new javax.swing.JLabel();
        rt = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        imgl = new javax.swing.JLabel();
        retrieve = new javax.swing.JPanel();
        backr = new javax.swing.JLabel();
        ld = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        txt2 = new javax.swing.JLabel();
        ret = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        store = new javax.swing.JPanel();
        backs = new javax.swing.JLabel();
        dtarget = new javax.swing.JLabel();
        stg = new javax.swing.JLabel();
        txt = new javax.swing.JLabel();
        txt1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(904, 533));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        slide.setPreferredSize(new java.awt.Dimension(980, 650));

        main.setBackground(new java.awt.Color(51, 51, 51));
        main.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                mainMouseMoved(evt);
            }
        });
        main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        st.setBackground(new java.awt.Color(0, 255, 255));
        st.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        st.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ugsc/file.png"))); // NOI18N
        st.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        st.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                stMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                stMouseExited(evt);
            }
        });
        main.add(st, new org.netbeans.lib.awtextra.AbsoluteConstraints(669, 304, 250, 150));

        rt.setBackground(new java.awt.Color(0, 26, 19));
        rt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ugsc/recover.png"))); // NOI18N
        rt.setToolTipText("");
        rt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rtMouseExited(evt);
            }
        });
        main.add(rt, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 302, 257, 162));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ugsc/usbs.png"))); // NOI18N
        main.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(321, 277, 330, -1));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Calibri", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(". . . . .");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        main.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 198, 120, 24));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Calibri", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("UGSC");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        main.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 162, 149, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Calibri", 0, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Store Files");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        main.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(679, 460, 229, -1));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Calibri", 0, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Recover Files");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        main.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 470, 270, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(247, 37, 133));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("USB Gaurded Secure Container");
        jLabel6.setToolTipText("");
        main.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(321, 582, -1, -1));

        jLabel7.setBackground(new java.awt.Color(255, 51, 51));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("X");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.setOpaque(true);
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        main.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(929, 126, 42, 20));

        imgl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ugsc/OeNIim.png"))); // NOI18N
        imgl.setText("jLabel9");
        main.add(imgl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 970, 500));

        slide.addTab("tab1", main);

        retrieve.setBackground(new java.awt.Color(51, 51, 51));
        retrieve.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                retrieveMouseMoved(evt);
            }
        });
        retrieve.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                retrieveFocusGained(evt);
            }
        });
        retrieve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                retrieveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                retrieveMouseEntered(evt);
            }
        });
        retrieve.setLayout(null);

        backr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ugsc/back.png"))); // NOI18N
        backr.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backrMouseClicked(evt);
            }
        });
        retrieve.add(backr);
        backr.setBounds(23, 136, 76, 39);

        ld.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ugsc/road.gif"))); // NOI18N
        retrieve.add(ld);
        ld.setBounds(607, 263, 220, 190);

        tb1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tb1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "sno", "current", "moved", "first", "Stored Files"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tb1.setFocusable(false);
        tb1.setGridColor(new java.awt.Color(255, 255, 255));
        tb1.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tb1.setRequestFocusEnabled(false);
        tb1.setRowHeight(25);
        tb1.setSelectionBackground(new java.awt.Color(204, 0, 204));
        tb1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tb1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tb1.setShowHorizontalLines(false);
        tb1.setShowVerticalLines(false);
        tb1.getTableHeader().setResizingAllowed(false);
        tb1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tb1);
        if (tb1.getColumnModel().getColumnCount() > 0) {
            tb1.getColumnModel().getColumn(0).setResizable(false);
            tb1.getColumnModel().getColumn(1).setResizable(false);
            tb1.getColumnModel().getColumn(2).setResizable(false);
            tb1.getColumnModel().getColumn(3).setResizable(false);
            tb1.getColumnModel().getColumn(4).setResizable(false);
        }

        retrieve.add(jScrollPane1);
        jScrollPane1.setBounds(62, 242, 333, 290);

        txt2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txt2.setForeground(new java.awt.Color(255, 255, 255));
        txt2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt2.setText("Retrieve Files");
        retrieve.add(txt2);
        txt2.setBounds(70, 200, 296, 38);

        ret.setBackground(new java.awt.Color(114, 9, 183));
        ret.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        ret.setForeground(new java.awt.Color(255, 255, 255));
        ret.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ret.setText("Retrieve");
        ret.setToolTipText(""); // NOI18N
        ret.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ret.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ret.setFocusable(false);
        ret.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ret.setInheritsPopupMenu(false);
        ret.setOpaque(true);
        ret.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ret.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                retMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                retMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                retMouseExited(evt);
            }
        });
        retrieve.add(ret);
        ret.setBounds(630, 460, 173, 36);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ugsc/OeNIim.png"))); // NOI18N
        retrieve.add(jLabel9);
        jLabel9.setBounds(10, 120, 970, 500);

        slide.addTab("tab2", retrieve);

        store.setBackground(new java.awt.Color(51, 51, 51));
        store.setLayout(null);

        backs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ugsc/back.png"))); // NOI18N
        backs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backsMouseClicked(evt);
            }
        });
        store.add(backs);
        backs.setBounds(23, 136, 76, 39);

        dtarget.setBackground(new java.awt.Color(255, 255, 255));
        dtarget.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ugsc/dfile.png"))); // NOI18N
        dtarget.setOpaque(true);
        dtarget.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dtargetMouseReleased(evt);
            }
        });
        store.add(dtarget);
        dtarget.setBounds(520, 220, 418, 339);

        stg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ugsc/wkikck.gif"))); // NOI18N
        store.add(stg);
        stg.setBounds(105, 263, 261, 200);

        txt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txt.setForeground(new java.awt.Color(255, 255, 255));
        txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt.setText("  PLease Drag File into the box");
        store.add(txt);
        txt.setBounds(93, 481, 282, 31);

        txt1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txt1.setForeground(new java.awt.Color(255, 255, 255));
        txt1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt1.setText("Secure File Container");
        store.add(txt1);
        txt1.setBounds(600, 170, 296, 38);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ugsc/OeNIim.png"))); // NOI18N
        store.add(jLabel8);
        jLabel8.setBounds(10, 120, 1000, 500);

        slide.addTab("tab3", store);

        getContentPane().add(slide, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -150, 980, 650));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void stMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stMouseEntered
//st.setBackground(new Color(0, 255, 191));
ImageIcon image = new ImageIcon(this.getClass().getResource("fls.png"));
                st.setIcon(image);
        // TODO add your handling code here:
    }//GEN-LAST:event_stMouseEntered

    private void stMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stMouseExited
//  st.setBackground(new Color(0, 255, 255));
ImageIcon image = new ImageIcon(this.getClass().getResource("file.png"));
                st.setIcon(image);
        // TODO add your handling code here:
    }//GEN-LAST:event_stMouseExited

    private void rtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rtMouseEntered
//    rt.setBackground(new Color(0, 51, 38));
ImageIcon image = new ImageIcon(this.getClass().getResource("retr.png"));
                rt.setIcon(image);
        // TODO add your handling code here:
    }//GEN-LAST:event_rtMouseEntered

    private void rtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rtMouseExited
     ImageIcon image = new ImageIcon(this.getClass().getResource("recover.png"));
                rt.setIcon(image);
        // TODO add your handling code here:
    }//GEN-LAST:event_rtMouseExited

    private void stMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stMouseClicked
slide.setSelectedIndex(2);
txt.setText("  PLease Drag File into the box");
ImageIcon image = new ImageIcon(this.getClass().getResource("wkikck.gif"));
                stg.setIcon(image);
        // TODO add your handling code here:
    }//GEN-LAST:event_stMouseClicked

    private void rtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rtMouseClicked
slide.setSelectedIndex(1);
tb1.repaint();
 retrieve();   
        // TODO add your handling code here:
    }//GEN-LAST:event_rtMouseClicked

    private void backrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backrMouseClicked
slide.setSelectedIndex(0);        // TODO add your handling code here:
    }//GEN-LAST:event_backrMouseClicked

    private void backsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backsMouseClicked
slide.setSelectedIndex(0);           // TODO add your handling code here:
    }//GEN-LAST:event_backsMouseClicked
String pp="";
public String[] asr =new String[50];
public String mlname="";
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        dtarget.setDropTarget(new DropTarget() {
        public synchronized void drop(DropTargetDropEvent evt) {
        try {
            evt.acceptDrop(DnDConstants.ACTION_COPY);
            List<File> droppedFiles = (List<File>)
                evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
            for (File file : droppedFiles) {
                System.out.println("File path is '" + file.getPath() + "'.");
                
                pp = file.getPath();
                dd_split();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
});  
        tb1.getTableHeader().setFont(new Font("Calibri",Font.BOLD,14));
tb1.getTableHeader().setBackground(new Color(247,37,133));
tb1.getTableHeader().setForeground(Color.WHITE);
tb1.getTableHeader().setOpaque(false);
tb1.setRowHeight(29);
       hide_column();
        slide.setBorder(BorderFactory.createEmptyBorder());
        jLabel8.setBorder(BorderFactory.createEmptyBorder());
        main.setBorder(BorderFactory.createEmptyBorder());
        store.setBorder(BorderFactory.createEmptyBorder());
        retrieve.setBorder(BorderFactory.createEmptyBorder());
        imgl.setBorder(BorderFactory.createEmptyBorder());

        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void retrieveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_retrieveFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_retrieveFocusGained

    private void retrieveMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retrieveMouseMoved


    }//GEN-LAST:event_retrieveMouseMoved

    private void retrieveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retrieveMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_retrieveMouseClicked

    private void retrieveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retrieveMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_retrieveMouseEntered

    private void mainMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainMouseMoved
            // TODO add your handling code here:
    }//GEN-LAST:event_mainMouseMoved

    private void dtargetMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dtargetMouseReleased
ackk();        // TODO add your handling code here:
    }//GEN-LAST:event_dtargetMouseReleased

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel7MouseClicked

    private void retMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retMouseEntered
        // TODO add your handling code here:
        ret.setBackground(new Color(181,23,158));   
    }//GEN-LAST:event_retMouseEntered

    private void retMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retMouseExited
ret.setBackground(new Color(114,9,183));        // TODO add your handling code here:
    }//GEN-LAST:event_retMouseExited

    private void retMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retMouseClicked
DefaultTableModel tl = (DefaultTableModel) tb1.getModel();
        int row = tb1.getSelectedRow();
        String sno = (String) tl.getValueAt(row,0);
        String first = (String) tl.getValueAt(row,3);
        String current = (String) tl.getValueAt(row,1);
        merge(first,current);
        deleterow(Integer.parseInt(sno));        // TODO add your handling code here:
    }//GEN-LAST:event_retMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
        
        
        
        
    }
    public void hide_column(){
         DefaultTableModel t1 = (DefaultTableModel) tb1.getModel();
        tb1.getColumnModel().getColumn(0).setMinWidth(0);
tb1.getColumnModel().getColumn(0).setMaxWidth(0);
tb1.getColumnModel().getColumn(0).setWidth(0);
tb1.getColumnModel().getColumn(1).setMinWidth(0);
tb1.getColumnModel().getColumn(1).setMaxWidth(0);
tb1.getColumnModel().getColumn(1).setWidth(0);
tb1.getColumnModel().getColumn(2).setMinWidth(0);
tb1.getColumnModel().getColumn(2).setMaxWidth(0);
tb1.getColumnModel().getColumn(2).setWidth(0);
tb1.getColumnModel().getColumn(3).setMinWidth(0);
tb1.getColumnModel().getColumn(3).setMaxWidth(0);
tb1.getColumnModel().getColumn(3).setWidth(0);

    }
    public void retrieve(){
        String uname = "root";
        String pass="toor";
        String db = "jdbc:mysql://localhost:3306/sandbox";
        Connection conn = null;
        
        ResultSet rs = null;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection(db,uname,pass);
            java.sql.Statement st = conn.createStatement();
            String sl="select * from entries;";
            System.out.println(sl);
            rs = st.executeQuery(sl);
            while(rs.next()){
                String sno = String.valueOf(rs.getInt("sno"));
                String current = rs.getString("current");
                String moved = rs.getString("moved");
                String first = rs.getString("first");
                String name = rs.getString("name");
                
                String tbData[] = {sno,current,moved,first,name};
                DefaultTableModel tbmodel = (DefaultTableModel) tb1.getModel();
                
           tbmodel.setRowCount(0);
                tbmodel.addRow(tbData);
            }
            conn.close();
    }catch(Exception e){
        System.out.println(e);
    }
    }
    
    public  void dd_split(){
        try{
    byte b[] = new byte[100];
    int x=1 ,j=0;
    String s="";
    InputStreamReader ins = new InputStreamReader(System.in);
    BufferedReader br = new BufferedReader(ins);
    System.out.println("Path : ");
    String path="";
    path = pp;
String mv_name = ext(path);
System.out.println(mv_name);
File filler = new File(path);
String fname = filler.getName();
String bx = new File("").getAbsolutePath();
check();
String nn = rs();
System.out.println(nn);
mlname=bx+"\\build\\classes\\ugsc\\sandbox\\"+nn;
System.out.println(mlname);
File file = new File(mlname);
//creating the directory
file.mkdir();
String moved = bx+"\\build\\classes\\ugsc\\sandbox\\"+nn+"\\"+nn+"."+nn;
System.out.println(moved);
filler.renameTo(new File(moved));
filler.delete();
File temp = new File(moved);
    String first_part="";
    FileInputStream fis = new FileInputStream(moved);
    int read_bytes;
    while(fis.available()!=0){
        j=0;
        s="";
        if(x<=9){
            s=moved+".00"+x;
            if(x==1){
                first_part=s;
            }
            
        }
        else{
            s=moved+".0"+x;
        }
        
        FileOutputStream fos = new FileOutputStream(s);
        while(j<2000000 && fis.available()!=0){
            read_bytes = fis.read(b,0,100);
            j=j+read_bytes;
            fos.write(b,0,read_bytes);        
        }
        System.out.println("Part "+x+" Created");
        
        x++;
    }
    System.out.println("Files Splitted successfully");
    fis.close(); 
    insert(path,moved,first_part,fname); 
    temp.delete();
  
      
    
    System.out.println(""+first_part);
    File f = new File(first_part);
    hide(f);
}
catch(Exception e){
    e.printStackTrace();
}
    }
     public void insert(String path,String moved,String first_part,String mv_name){
        String uname = "root";
        String pass="toor";
        String db = "jdbc:mysql://localhost:3306/sandbox";
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        String newpath=path.replace("\\","\\\\");
        String newmoved=moved.replace("\\","\\\\");
        String newfirst=first_part.replace("\\","\\\\");
        try{
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection(db,uname,pass);
            String sl="insert into entries(current,moved,first,name) values("+'"'+newpath+'"'+","+'"'+newmoved+'"'+","+'"'+newfirst+'"'+","+'"'+mv_name+'"'+");";
            System.out.println(sl);
            pst=conn.prepareStatement(sl);
            pst.executeUpdate();
            conn.close();
    }catch(Exception e){
        System.out.println(e);
    }
    
    }
     public String ext(String path){
     return (path.substring(path.lastIndexOf(".") + 1));
    }
     public void check(){
        String mx = new File("").getAbsolutePath();
        File gg = new File(mx+"\\build\\classes\\ugsc\\sandbox");
        if(gg.exists()){
            System.out.println("Exists");
        }
        else{
            gg.mkdirs();
            System.out.println("Folder created");
        }
    }
    static String rs()
    {
  
        // chose a Character random from this String
        String AlphaNumericString = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                                    + "0123456789"
                                    + "abcdefghijklmnopqrstuvxyz";
  
        // create StringBuffer size of AlphaNumericString
        StringBuilder sb = new StringBuilder(5);
  
        for (int i = 0; i < 5; i++) {
  
            // generate a random number between
            // 0 to AlphaNumericString variable length
            int index
                = (int)(AlphaNumericString.length()
                        * Math.random());
  
            // add Character one by one in end of sb
            sb.append(AlphaNumericString
                          .charAt(index));
        }
  
        return sb.toString();
    }
    public void hide(File src) throws InterruptedException, IOException {
    // win32 command line variant
    Process p = Runtime.getRuntime().exec("attrib +h " + src.getPath());
    p.waitFor(); // p.waitFor() important, so that the file really appears as hidden immediately after function exit.
}
    
    public void merge(String first,String current){
             try{
    byte b[] = new byte[100];
    InputStreamReader ins = new InputStreamReader(System.in);
    BufferedReader br = new BufferedReader(ins);
    System.out.println("Path of first part : ");
    String part_path = first;
    String file_name = part_path.substring(0,part_path.lastIndexOf("."));
    String part_no = part_path.substring(part_path.lastIndexOf(".")+1);
    String file_extention = file_name.substring(part_path.lastIndexOf("."));
    System.out.println("New file path name : ");
    String new_path = current;
    File combine_file_path = new File(new_path);
    String path_parent  = combine_file_path.getParent();
    int flag =0;
    if(new_path.endsWith(file_extention)){
        flag=1;
    }
    File check_part_file_path = new File(part_path);
    File check_new_file_path = new File(path_parent);
    
    if(check_part_file_path.exists() &&flag==1 && check_new_file_path.exists()){
        FileOutputStream fos = new FileOutputStream(new_path);
        int x=1;
        int read_bytes;
        String parts_name_path="";
        while(true){
            parts_name_path="";
            if(part_no.startsWith("00")){
                parts_name_path = file_name+".00"+x;
            }
            else{
                parts_name_path = file_name+".0"+x;
            }
            File f = new File(parts_name_path);
            if(f.exists()){
                FileInputStream fis = new FileInputStream(parts_name_path);
                while(fis.available()!=0){
                    read_bytes = fis.read(b,0,100);
                    fos.write(b,0,read_bytes);
                }
                System.out.println("Part "+x+" Joined");
                fis.close();
                x++;
            }
            else{
                System.out.println("File Joined successfully");      
                break;
            }
            f.deleteOnExit();
        }
    }
    
    else if(!(check_new_file_path.exists())){
        System.out.println("Wrong path for new file");
    }
    else if(flag==0){
        System.out.println("New file extention does not match");
    }
    else{
        System.out.println("First part doesnt exist");
    }
}
catch(Exception e){
    e.printStackTrace();
}
    }
    public void deleterow(int sno){
        String uname = "root";
        String pass="toor";
        String db = "jdbc:mysql://localhost:3306/sandbox";
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection(db,uname,pass);
            java.sql.Statement st = conn.createStatement();
            String sl="delete from entries where sno="+sno+";";
            System.out.println(sl);
            pst=conn.prepareStatement(sl);
            pst.executeUpdate();
           DefaultTableModel tg = (DefaultTableModel) tb1.getModel();
           tg.setRowCount(0);
            conn.close();
            retrieve();
    }catch(Exception e){
        System.out.println(e);
    }
    }
    public void slowPrint(String message) { 
        txt.setText("");
      
        char[] chars = message.toCharArray();
        for (int i = 0; i < chars.length; i++) {
            txt.setText(txt.getText() + String.valueOf(message.charAt(i)));
            try {
                Thread.sleep(50);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }     
    }
    Thread t;
    public void ackk(){
      t = new Thread(new Runnable() {
        public void run() {
                try {
                    Thread.sleep(2000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                ImageIcon image = new ImageIcon(this.getClass().getResource("ss.gif"));
                stg.setIcon(image);
                slowPrint("Isolating . . .");
                try {
                    Thread.sleep(4000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
               image = new ImageIcon(this.getClass().getResource("ss2.gif"));
                stg.setIcon(image);
                slowPrint("File Secure!");
    }
     });
      t.start();
              }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backr;
    private javax.swing.JLabel backs;
    private javax.swing.JLabel dtarget;
    private javax.swing.JLabel imgl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel ld;
    private javax.swing.JPanel main;
    private javax.swing.JLabel ret;
    private javax.swing.JPanel retrieve;
    public javax.swing.JLabel rt;
    public javax.swing.JTabbedPane slide;
    public javax.swing.JLabel st;
    private javax.swing.JLabel stg;
    private javax.swing.JPanel store;
    private javax.swing.JTable tb1;
    private javax.swing.JLabel txt;
    private javax.swing.JLabel txt1;
    private javax.swing.JLabel txt2;
    // End of variables declaration//GEN-END:variables
}
